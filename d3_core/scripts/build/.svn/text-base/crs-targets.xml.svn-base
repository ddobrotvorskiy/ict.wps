<project name="crs-create-update-targets" basedir="../../">

    <import file="${basedir}/build.xml" optional="false" />
   
    <target name="create-crs-db" description="run SQL scripts that create tables for the database backend">
        <sql driver="org.apache.derby.jdbc.EmbeddedDriver" url="${crs.derby.url}" userid="" password="" >
            <classpath>
                <pathelement location="lib/derby/derby-10.4.2.0.jar" />
            </classpath>
            <transaction src="scripts/database/1.Transformations.SQL" />
            <transaction src="scripts/database/2.Datums.SQL" />
            <transaction src="scripts/database/3.Projections.SQL" />
            <transaction src="scripts/database/4.CoordinateSystems.SQL" />
            <transaction src="scripts/database/5.Identifiables.SQL" />
        </sql>
    </target>

    <target name="drop-crs-db" description="->drops all tables in the CRS database">
        <sql driver="org.apache.derby.jdbc.EmbeddedDriver" url="${crs.derby.url}" userid="" password="" >
            <classpath>
                <pathelement location="lib/derby/derby-10.4.2.0.jar" />
            </classpath>
            <transaction src="scripts/database/0.drop-all-in-order.SQL" />
        </sql>
    </target>

    <target name="fill-crs-db-from-xml" depends="publish-local" description="->fill the fill the created db ATTENTION, you will need to drop and create the current db for this to work.">
        <java  classname="org.deegree.crs.configuration.CRSConfiguration" fork="true" maxmemory="512M" >
            <classpath>
                <path refid="build.path"/>
                <pathelement location="${classes.dir}"/>
            </classpath>
            <arg line="-inFormat deegree -outFormat database -inFile ${crs.xml.config}" />
            <env key="CRS_DB_URL" value="${crs.derby.url}" />
        </java>
    </target>

    <target name="insert-crs-into-db-from-xml-configuration" depends="publish-local" description="->insert a crs defined in the deegree-crs-configuration.xml into the db.">
        <fail unless="crs.id" message="you should supply a crs.id parameter to this ant target (ant insert-crs-into-db-from-xml-configuration -Dcrs.id=your_newly_inserted_id)"/>
        <java  classname="org.deegree.crs.configuration.deegree.db.CRSDBExporter" fork="true" maxmemory="512M" >
            <classpath>
                <path refid="build.path"/>
                <pathelement location="${classes.dir}"/>
            </classpath>
            <arg line="xml ${crs.id}" />
            <env key="CRS_DB_URL" value="jdbc:derby:src/META-INF/deegreeCRS" />
        </java>
    </target>

    <target name="insert-crs-into-db-from-wkt-file" depends="publish-local" description="->insert a crs defined in a wkt file into the db.">
        <fail unless="wkt.file" message="you should supply a wkt.file parameter to this ant target (ant insert-crs-into-db-from-wkt-file -Dwkt.file=your_file)"/>
        <java  classname="org.deegree.crs.configuration.deegree.db.CRSDBExporter" fork="true" maxmemory="512M" >
            <classpath>
                <path refid="build.path"/>
                <pathelement location="${classes.dir}"/>
            </classpath>
            <arg line="${wkt.file}" />
            <env key="CRS_DB_URL" value="jdbc:derby:src/META-INF/deegreeCRS" />
        </java>
    </target>

		<target name="show-crs" description="-> outputs a crs with all its components, when supplied a CRS id">
				<fail unless="crs.id" message="you should supply a crs.id parameter to this ant target (-Dcrs.id=the_crs_that_you_want_to_look_at)"/>			
				<java classname="org.deegree.crs.configuration.deegree.db.CRSQuerier" fork="true" maxmemory="512M">
						<classpath>
								<path refid="build.path"/>
								<pathelement location="${classes.dir}"/>
						</classpath>
						<arg line="${crs.id}" />
				</java>
		</target>				

</project>
