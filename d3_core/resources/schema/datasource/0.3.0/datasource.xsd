<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns:ds="http://www.deegree.org/datasource" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:cm="http://www.deegree.org/commons"
  targetNamespace="http://www.deegree.org/datasource" elementFormDefault="qualified">
  <import namespace="http://www.deegree.org/commons" schemaLocation="../../commons/0.3.0/commons.xsd" />
  <annotation>
    <documentation>A datasource defines a location which supplies data.</documentation>
  </annotation>

  <element name="AbstractDataSource" type="ds:AbstractDataSourceType" abstract="true">
    <annotation>
      <documentation>Base declaration of all elements that define a datasource, i.e. that provides access to (geospatial) data.</documentation>
    </annotation>
  </element>

  <element name="AbstractFileSystemDataSource" type="ds:FileSystemDataSourceType" substitutionGroup="ds:AbstractDataSource">
    <annotation>
      <documentation>File system datasources can be referenced to define a connection to the filesystem (a file, or a fileset).</documentation>
    </annotation>
  </element>

  <!-- ==============================================================
    Define the base datasource, it only supplies a name. 
    ============================================================== -->
  <complexType name="AbstractDataSourceType" abstract="true">
    <annotation>
      <documentation>Base type of all data sources.</documentation>
    </annotation>
    <sequence>
      <element name="DataSourceName" minOccurs="0" type="string"/>
    </sequence>
  </complexType>

  <!-- ==============================================================
    Define the file system datasource, anything that might be using the file system as a single file or a directory. 
    ============================================================== -->
  <element name="AbstractFile" type="ds:FileType" abstract="true">
    <annotation>
      <documentation>
        Base declaration of all files, it can be used to define a location on the filesystem or it may be extended to define a file in an expected
        format.
      </documentation>
    </annotation>
  </element>

  <element name="AbstractFileSet" type="ds:FileSetType" abstract="true">
    <annotation>
      <documentation>A fileset defines a directory location and a file pattern, as well as a recursive search option.</documentation>
    </annotation>
  </element>

  <element name="File" substitutionGroup="ds:AbstractFile">
    <annotation>
      <documentation>Simple instance to a file.</documentation>
    </annotation>
  </element>

  <element name="Directory" substitutionGroup="ds:AbstractFile">
    <annotation>
      <documentation>Simple instance defining a directory.</documentation>
    </annotation>
  </element>

  <element name="FileSet" substitutionGroup="ds:AbstractFileSet">
    <annotation>
      <documentation>Simple instance defining a fileset.</documentation>
    </annotation>
  </element>

  <complexType name="FileType">
    <simpleContent>
      <extension base="string" />
    </simpleContent>
  </complexType>

  <complexType name="FileSetType">
    <annotation>
      <documentation>
        A fileset type defines a file pattern to search for in a given directory, as well if it should search recursively in the given directory.
      </documentation>
    </annotation>
    <simpleContent>
      <extension base="ds:FileType">
        <attribute name="filePattern" type="string" default="*" />
        <attribute name="recursive" type="boolean" />
      </extension>
    </simpleContent>
  </complexType>

  <complexType name="FileSystemDataSourceType">
    <annotation>
      <documentation>
        The filesystem is a common datasource, examples are rasters, elevationmodels or xml files. Heck... every file can be a datasource.
      </documentation>
    </annotation>
    <complexContent>
      <extension base="ds:AbstractDataSourceType">
        <choice>
          <element ref="ds:AbstractFile" maxOccurs="unbounded" />
          <element ref="ds:AbstractFileSet" />
        </choice>
      </extension>
    </complexContent>
  </complexType>
</schema>
